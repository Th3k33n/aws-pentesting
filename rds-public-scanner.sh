#!/bin/bash

print_help() {
    echo "This is a tool that enumerates RDS instances in an AWS account and returns the ones which are publicly accessible. The public ones will be stored to instances.txt"
    echo "Usage: $0 -p [AWS_PROFILE_NAME] -r [AWS_REGION]"
}

while getopts ":p:r:h" opt; do
  case ${opt} in
    p )
      PROFILE=$OPTARG
      ;;
    r )
      REGION=$OPTARG
      ;;
    h )
      print_help
      exit 0
      ;;
    \? )
      echo "Invalid option: -$OPTARG" 1>&2
      exit 1
      ;;
    : )
      echo "Invalid option: -$OPTARG requires an argument" 1>&2
      exit 1
      ;;
  esac
done

if [ -z "$PROFILE" ] || [ -z "$REGION" ]; then
  echo "Error: -p [AWS_PROFILE_NAME] and -r [AWS_REGION] must be specified"
  exit 1
fi

echo "-------------------------------"
echo "RDS Public Scanner is a tool that enumerates RDS instances in an AWS account to see if any are publicly accessible."
echo "If they are public, it will be echoed to the screen in green writing as well as saved to 'instances.txt' for manual enumeration."
echo "Enjoy! -Tyler Ramsbey"
echo "-------------------------------"

for INSTANCE in $(aws rds describe-db-instances --profile $PROFILE --region $REGION --query "DBInstances[].DBInstanceIdentifier" --output text); do
  if aws rds describe-db-instances --profile $PROFILE --region $REGION --db-instance-identifier $INSTANCE --query "DBInstances[].PubliclyAccessible" --output text | grep -q "True";
    then echo -e "\033[32mInstance $INSTANCE is publicly accessible\033[0m";
    echo "$INSTANCE" >> instances.txt;
  else
    echo -e "\033[31mInstance $INSTANCE is not publicly accessible\033[0m";
  fi;
done
